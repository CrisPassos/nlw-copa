// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// as tabelas são chamadas de model (schemes)
// @id primary key
// @default cria as guids automáticamente
model Pool {
  id       String   @id @default(cuid())
  title    String
  code     String   @unique
  createAt DateTime @default(now())
  ownerId  String?

  owner        User?         @relation(fields: [ownerId], references: [id])
  participants Participant[]
}

// tabela Pivot N-to-N
model Participant {
  id     String @id @default(cuid())
  userId String
  poolId String

  guesses Guess[]
  user    User    @relation(fields: [userId], references: [id])
  pool    Pool    @relation(fields: [poolId], references: [id])

  @@unique([userId, poolId])
}

// ? - permite inserir nullable na base de dados
model User {
  id        String   @id @default(cuid())
  nome      String
  email     String   @unique
  avatarUrl String?
  createAt  DateTime @default(now())

  participatingAt Participant[]
  ownPools        Pool[]
}

model Game {
  id                    String   @id @default(cuid())
  date                  DateTime
  firstTeamCountryCode  String
  secondTeamCountryCode String

  guesses Guess[]
}

// Palpite
// @relation é um alias
model Guess {
  id               String   @id @default(cuid())
  firstTeamPoints  Int
  secondTeamPoints Int
  createAt         DateTime @default(now())
  gameId           String
  participantId    String

  participant Participant @relation(fields: [participantId], references: [id])
  game        Game        @relation(fields: [gameId], references: [id])
}
